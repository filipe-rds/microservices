# üöÄ COMANDOS ESSENCIAIS - MICROSERVICES gRPC

## üìã SETUP INICIAL

```bash
# 1. Inicializar projeto completo
docker compose build && docker compose up -d

# 2. Verificar status dos servi√ßos
docker compose ps

# 3. Ver logs (se necess√°rio)
docker compose logs --tail=10
```

## üß™ TESTES ESSENCIAIS

### ‚úÖ Testes de Integra√ß√£o Completa (Order ‚Üí Payment ‚Üí Shipping)

```bash
# Teste 1: Pedido v√°lido simples (Total: R$ 42,00)
grpcurl -d '{"customer_id": 123, "order_items":[{"product_code": "PROD001", "quantity": 4, "unit_price": 10.50}]}' -plaintext localhost:3000 Order/Create

# Teste 2: Pedido com m√∫ltiplos produtos (Total: R$ 81,50)
grpcurl -d '{"customer_id": 456, "order_items":[{"product_code": "PROD001", "quantity": 3, "unit_price": 10.50}, {"product_code": "PROD002", "quantity": 2, "unit_price": 25.00}]}' -plaintext localhost:3000 Order/Create

# Teste 3: Erro - Total > R$ 1000 (DEVE FALHAR)
grpcurl -d '{"customer_id": 123, "order_items":[{"product_code": "PROD001", "quantity": 10, "unit_price": 120}]}' -plaintext localhost:3000 Order/Create

# Teste 4: Erro - Quantidade > 50 unidades (DEVE FALHAR)
grpcurl -d '{"customer_id": 123, "order_items":[{"product_code": "PROD001", "quantity": 51, "unit_price": 1}]}' -plaintext localhost:3000 Order/Create
```

### üì¶ Testes do Shipping Service (C√°lculo de Entrega)

```bash
# Teste: 3 itens ‚Üí 1 dia de entrega
grpcurl -d '{"order_id": 100, "items":[{"product_code": "PROD001", "quantity": 3}]}' -plaintext localhost:3002 Shipping/Create

# Teste: 10 itens ‚Üí 3 dias de entrega
grpcurl -d '{"order_id": 102, "items":[{"product_code": "PROD003", "quantity": 10}]}' -plaintext localhost:3002 Shipping/Create

# Teste: 23 itens ‚Üí 5 dias de entrega
grpcurl -d '{"order_id": 105, "items":[{"product_code": "PROD005", "quantity": 23}]}' -plaintext localhost:3002 Shipping/Create
```

## üóÉÔ∏è BANCO DE DADOS

```bash
# Acessar MySQL
docker compose exec database mysql -uroot -pminhasenha

# Verificar databases criadas
docker compose exec database mysql -uroot -pminhasenha -e "SHOW DATABASES;"

# Ver produtos cadastrados
docker compose exec database mysql -uroot -pminhasenha -e "USE \`order\`; SELECT * FROM products;"
```

## üîß COMANDOS √öTEIS

```bash
# Parar servi√ßos
docker compose down

# Reiniciar ap√≥s mudan√ßas
docker compose down && docker compose build && docker compose up -d

# Ver logs espec√≠ficos
docker compose logs order --tail=5
docker compose logs payment --tail=5
docker compose logs shipping --tail=5
docker compose logs database --tail=5
```

## üìä INFORMA√á√ïES ESSENCIAIS

**Portas dos Servi√ßos:**
- Order Service: localhost:3000 (gRPC)
- Payment Service: localhost:3001 (gRPC)
- Shipping Service: localhost:3002 (gRPC)
- MySQL: localhost:3306 (root/minhasenha)

**Produtos Dispon√≠veis:**
- PROD001: R$ 10,50 (100 unidades)
- PROD002: R$ 25,00 (50 unidades)
- PROD003: R$ 15,75 (75 unidades)
- PROD004: R$ 30,00 (25 unidades)
- PROD005: R$ 12,99 (200 unidades)

**Regras de Neg√≥cio:**
- Limite de valor: R$ 1000 por pedido
- Limite de quantidade: 50 unidades por pedido
- C√°lculo de entrega: 1 + (quantidade_total / 5) dias

**Fluxo:** Order ‚Üí Payment ‚Üí Shipping ‚Üí Resposta com Order ID

## üéØ VALIDA√á√ÉO R√ÅPIDA

```bash
# Teste r√°pido completo
grpcurl -d '{"customer_id": 999, "order_items":[{"product_code": "PROD001", "quantity": 2, "unit_price": 10.50}]}' -plaintext localhost:3000 Order/Create
```

‚úÖ **Se retornar Order ID, todo o sistema est√° funcionando!**